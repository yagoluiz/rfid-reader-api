# ASP.NET Core:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

# Docker Compose:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/docker-compose

# YAML reference:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

pool:
  vmImage: 'ubuntu-latest'

resources:
- repo: self

variables:
  buildConfiguration: 'Release'
  restoreBuildProjectFunction: '**/IoT.Function.Trigger.csproj'
  restoreBuildProjectFunctionTest: '**/IoT.Function.Trigger.*[Tt]ests/*.csproj'
  azureSubscriptionEndpoint: unb-azure-resource
  azureContainerRegistry: rfidregistry.azurecr.io

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(restoreBuildProjectFunction)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(restoreBuildProjectFunction)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(restoreBuildProjectFunctionTest)'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    projects: '$(restoreBuildProjectFunction)'
    publishWebProjects: false
    modifyOutputPath: true
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'

- task: DockerCompose@0
  displayName: Build services
  inputs:
    action: Build services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: '**/docker-compose.yml'
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    includeLatestTag: true
    additionalImageTags: $(Build.BuildId)

- task: DockerCompose@0
  displayName: Push services
  inputs:
    action: Push services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    dockerComposeFile: '**/docker-compose.yml'
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    includeLatestTag: true
    additionalImageTags: $(Build.BuildId)